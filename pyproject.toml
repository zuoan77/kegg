[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "simple-kegg"
version = "1.0.0"
description = "KEGG代谢网络图构建和分析工具"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["kegg", "metabolic", "network", "graph", "bioinformatics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "networkx>=3.0",
    "dgl>=2.0.0",
    "torch>=2.0.0",
    "torch-geometric>=2.0.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0",
    "plotly>=5.0.0",
    "pyvis>=0.3.0",
    "seaborn>=0.11.0",
    "biopython>=1.80",
    "rdkit>=2023.0.0",
    "openpyxl>=3.0.0",
    "PyYAML>=6.0",
    "tqdm>=4.60.0",
    "joblib>=1.0.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "ipython>=8.0.0",
    "jupyter>=1.0.0",
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.900",
]
gpu = [
    "torch[cuda]>=2.0.0",
    "dgl-cu124>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/simple-kegg"
Repository = "https://github.com/yourusername/simple-kegg.git"
Issues = "https://github.com/yourusername/simple-kegg/issues"

[project.scripts]
kegg-preprocess = "src.data_processing.kegg_processor:main"
kegg-build-graph = "src.graph_construction.main:main"
kegg-predict = "src.kegnn_model.predict_kegg:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true